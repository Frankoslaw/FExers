name: ci

on: push

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Cache container
              id: cache-container
              uses: actions/cache@v3
              with:
                  path: /tmp/exers_container.tar
                  key: exers-container-cache
            - name: Set up Docker Buildx
              if: steps.cache-container.outputs.cache-hit != 'true'
              uses: docker/setup-buildx-action@v2
            - name: Build and export
              uses: docker/build-push-action@v4
              if: steps.cache-container.outputs.cache-hit != 'true'
              with:
                  context: .
                  tags: exers:latest
                  outputs: type=docker,dest=/tmp/exers_container.tar
            - name: Upload artifact
              uses: actions/upload-artifact@v3
              if: steps.cache-container.outputs.cache-hit != 'true'
              with:
                  name: exers_container
                  path: /tmp/exers_container.tar
    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Cache container
              id: cache-container
              uses: actions/cache@v3
              with:
                  path: /tmp/exers_container.tar
                  key: exers-container-cache
            - name: Download artifact
              if: steps.cache-container.outputs.cache-hit != 'true'
              uses: actions/download-artifact@v3
              with:
                  name: exers_container
                  path: /tmp
            - name: Load image
              run: |
                  docker load --input /tmp/exers_container.tar
                  docker image ls -a
            - name: Checkout
              uses: actions/checkout@v3
            - name: Test
              run: docker run --rm -v "$GITHUB_WORKSPACE:/app" exers bash -c "cd app && sudo -E /root/.cargo/bin/cargo test --locked --features everything"
